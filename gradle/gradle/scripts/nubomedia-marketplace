#!/bin/sh

set -e

. /lib/lsb/init-functions

_PROJECT_CONFIG_FILE=/etc/nubomedia/marketplace.properties
_PROJECT_NAME="nubomedia-marketplace"
_INSTALL_DIR=/usr/lib/nubomedia
_PID_FILE=/var/run/nubomedia-marketplace.pid
_DAEMON_USER=root
_OSTYPE=$(uname)

_USER="$(id -un 2>/dev/null || true)"

_ex='sh -c'

checkBinary () {
  if command -v $1 >/dev/null 2>&1 ; then
      log_success_msg "Checking for '$1'"
      return 0
  else
      log_failure_msg "Checking for '$1'"
      return 1
  fi
}

if [ "$_USER" != 'root' ]; then
    if checkBinary sudo; then
        _ex='sudo -E sh -c'
    elif checkBinary su; then
        _ex='su -c'
    fi
fi

####################
#### PaaS-Manager ##
####################

check_already_running () {
	instance=$(ps aux | grep -v grep | grep "$_PROJECT_NAME" | grep jar | wc -l)
    if [ ${instance} -ne 0 ] ; then
        log_warning_msg "The $_PROJECT_NAME is already running"
        exit 1
    fi
}

set_jar_version () {
	PROJECT_JAR=$(ls -ct ${_INSTALL_DIR} | grep "$_PROJECT_NAME" | grep jar | head -n 1)
	if [ ${PROJECT_JAR} = "" ]; then
        log_failure_msg "The $_PROJECT_NAME is not installed (jar-file not found)"
		exit 1
    fi
}

configure () {
    check_already_running
    set_jar_version
}

start () {
    configure
    echo "Starting $_PROJECT_NAME ..."
    $_ex 'start-stop-daemon --start --background --pidfile '"${_PID_FILE}"' --make-pidfile --user '"${_DAEMON_USER}"' --chuid '"${_DAEMON_USER}"' --exec /usr/bin/java -- -jar '"${_INSTALL_DIR}"'/'"${PROJECT_JAR}"' --spring.config.location=file:'"${_PROJECT_CONFIG_FILE}"
    log_end_msg $?
}

stop () {
    echo "Stopping $_PROJECT_NAME ..."
    $_ex 'start-stop-daemon --stop --pidfile '"$_PID_FILE"
    log_end_msg $?
}

kill () {
    $_ex 'kill -9 `cat '"${_PID_FILE}"'`'
    log_end_msg $?
}

restart () {
    stop
    start
}


usage () {
    echo "$_PROJECT_NAME"
    echo "Usage:\n\t [$_PROJECT_NAME start|stop|restart|kill] | [service $_PROJECT_NAME start|stop|restart|kill] | [start|stop $_PROJECT_NAME]"
}


##
#   MAIN
##

if [ ${#} -eq 0 ]
   then
        usage
        exit 1
fi

for cmd in ${@}
do
    case ${cmd} in
        "start" )
            start ;;
        "stop" )
            stop ;;
        "restart" )
            restart ;;
        "kill" )
            kill ;;
         *)
	        usage;;
    esac
    if [ ${?} -ne 0 ];
    then
	    exit 1
    fi
done
